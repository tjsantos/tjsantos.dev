/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GfeRouteImport } from './routes/_gfe/route'
import { Route as IndexImport } from './routes/index'
import { Route as GfeTestimonialCardRouteImport } from './routes/_gfe/testimonial-card/route'

// Create/Update Routes

const GfeRouteRoute = GfeRouteImport.update({
  id: '/_gfe',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GfeTestimonialCardRouteRoute = GfeTestimonialCardRouteImport.update({
  id: '/testimonial-card',
  path: '/testimonial-card',
  getParentRoute: () => GfeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_gfe': {
      id: '/_gfe'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GfeRouteImport
      parentRoute: typeof rootRoute
    }
    '/_gfe/testimonial-card': {
      id: '/_gfe/testimonial-card'
      path: '/testimonial-card'
      fullPath: '/testimonial-card'
      preLoaderRoute: typeof GfeTestimonialCardRouteImport
      parentRoute: typeof GfeRouteImport
    }
  }
}

// Create and export the route tree

interface GfeRouteRouteChildren {
  GfeTestimonialCardRouteRoute: typeof GfeTestimonialCardRouteRoute
}

const GfeRouteRouteChildren: GfeRouteRouteChildren = {
  GfeTestimonialCardRouteRoute: GfeTestimonialCardRouteRoute,
}

const GfeRouteRouteWithChildren = GfeRouteRoute._addFileChildren(
  GfeRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof GfeRouteRouteWithChildren
  '/testimonial-card': typeof GfeTestimonialCardRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof GfeRouteRouteWithChildren
  '/testimonial-card': typeof GfeTestimonialCardRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_gfe': typeof GfeRouteRouteWithChildren
  '/_gfe/testimonial-card': typeof GfeTestimonialCardRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/testimonial-card'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/testimonial-card'
  id: '__root__' | '/' | '/_gfe' | '/_gfe/testimonial-card'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GfeRouteRoute: typeof GfeRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GfeRouteRoute: GfeRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_gfe"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_gfe": {
      "filePath": "_gfe/route.tsx",
      "children": [
        "/_gfe/testimonial-card"
      ]
    },
    "/_gfe/testimonial-card": {
      "filePath": "_gfe/testimonial-card/route.tsx",
      "parent": "/_gfe"
    }
  }
}
ROUTE_MANIFEST_END */
